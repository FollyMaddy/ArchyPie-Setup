diff -ru a/configuration.c b/configuration.c
--- a/configuration.c	2024-03-21 15:09:50.000000000 +0000
+++ b/configuration.c	2024-03-21 17:26:19.000000000 +0000
@@ -1580,6 +1580,7 @@
    SETTING_PATH("audio_dsp_plugin",              settings->paths.path_audio_dsp_plugin, false, NULL, true);
    SETTING_PATH("audio_filter_dir",              settings->paths.directory_audio_filter, true, NULL, true);
    SETTING_PATH("video_shader_dir",              settings->paths.directory_video_shader, true, NULL, true);
+   SETTING_PATH("video_shader",                  settings->paths.path_shader, false, NULL, true);
    SETTING_PATH("video_filter_dir",              settings->paths.directory_video_filter, true, NULL, true);
    SETTING_PATH("video_filter",                  settings->paths.path_softfilter_plugin, false, NULL, true);
    SETTING_PATH("video_font_path",               settings->paths.path_font, false, NULL, true);
@@ -2950,6 +2951,7 @@
    *settings->paths.directory_menu_config = '\0';
 #endif
    *settings->paths.directory_video_shader = '\0';
+   *settings->paths.path_shader            = '\0';
    *settings->paths.directory_video_filter = '\0';
    *settings->paths.directory_audio_filter = '\0';
 
@@ -5167,6 +5169,10 @@
    {
       for (i = 0; i < (unsigned)path_settings_size; i++)
       {
+         /* blacklist the 'video_shader' configuration path, better handled by shader presets */
+         if (string_is_equal(path_settings[i].ident, "video_shader"))
+             continue;
+
          const char *value = path_settings[i].ptr;
 
          if (path_settings[i].def_enable && string_is_empty(path_settings[i].ptr))
diff -ru a/configuration.h b/configuration.h
--- a/configuration.h	2024-03-21 15:09:50.000000000 +0000
+++ b/configuration.h	2024-03-21 17:26:19.000000000 +0000
@@ -546,6 +546,7 @@
       char path_cheat_settings[PATH_MAX_LENGTH];
       char path_font[PATH_MAX_LENGTH];
       char path_rgui_theme_preset[PATH_MAX_LENGTH];
+      char path_shader[PATH_MAX_LENGTH];
 
       char directory_audio_filter[PATH_MAX_LENGTH];
       char directory_autoconfig[PATH_MAX_LENGTH];
diff -ru a/frontend/drivers/platform_unix.c b/frontend/drivers/platform_unix.c
--- a/frontend/drivers/platform_unix.c	2024-03-21 15:09:50.000000000 +0000
+++ b/frontend/drivers/platform_unix.c	2024-03-21 17:26:19.000000000 +0000
@@ -1888,12 +1888,6 @@
          "thumbnails", sizeof(g_defaults.dirs[DEFAULT_DIR_THUMBNAILS]));
    fill_pathname_join(g_defaults.dirs[DEFAULT_DIR_LOGS], base_path,
          "logs", sizeof(g_defaults.dirs[DEFAULT_DIR_LOGS]));
-   fill_pathname_join(g_defaults.dirs[DEFAULT_DIR_SRAM], base_path,
-         "saves", sizeof(g_defaults.dirs[DEFAULT_DIR_SRAM]));
-   fill_pathname_join(g_defaults.dirs[DEFAULT_DIR_SAVESTATE], base_path,
-         "states", sizeof(g_defaults.dirs[DEFAULT_DIR_SAVESTATE]));
-   fill_pathname_join(g_defaults.dirs[DEFAULT_DIR_SYSTEM], base_path,
-         "system", sizeof(g_defaults.dirs[DEFAULT_DIR_SYSTEM]));
 #endif
 
 #ifndef IS_SALAMANDER
diff -ru a/gfx/video_shader_parse.c b/gfx/video_shader_parse.c
--- a/gfx/video_shader_parse.c	2024-03-21 15:09:50.000000000 +0000
+++ b/gfx/video_shader_parse.c	2024-03-21 17:26:19.000000000 +0000
@@ -2782,9 +2782,10 @@
       {
          if (string_is_empty(special_name))
             break;
-
-         fill_pathname_join(s, shader_directory, special_name, len);
-         strlcat(s, video_shader_get_preset_extension(types[i]), len);
+         if (strcmp(special_name, "config")!=0) {
+            fill_pathname_join(s, shader_directory, special_name, len);
+            strlcat(s, video_shader_get_preset_extension(types[i]), len);
+         }
       }
 
       if (path_is_valid(s))
@@ -2890,6 +2891,17 @@
                "global"))
          goto success;
    }
+   /* Configuration file shader found ? */
+   strlcpy(shader_path, settings->paths.path_shader, PATH_MAX_LENGTH);
+   if (!string_is_empty(shader_path)) {
+      RARCH_LOG("[Shaders/ArchyPie]: Configuration file shader path found.\n");
+      if(video_shader_load_shader_preset_internal(
+            shader_path,
+            sizeof(shader_path),
+            NULL, NULL,
+            "config"))
+         goto success;
+   }
    return false;
 
 success:
